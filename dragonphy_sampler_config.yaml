name: <TODO: insert name of spice subckt>
filepath: <TODO: insert filepath for spice file (.sp or .spf probably)"
template: SamplerCustomTemplate
pin:
    # <TODO: in my test, the .subckt has a vdd input which I set up to be 1.2 volts below (commented out).
    # I'm not sure if your vdd is set up as an input to the sampler, so you might need something different.
    #vdd:
    #    direction: input
    #    datatype: real
    #    value: 0.8

    # Next are the inputs set up based on the verilog chip source
    Vin:
        direction: input
        datatype: real
        value: <TODO: put a range of input value, in Volts, in parentheses this spot, like "(0, 0.4)">
        template_pin: in_
    clk_v2t:
        direction: input
        datatype: bit
        template_pin: clk
        #width: 1
    clk_v2tb:
        direction: input
        datatype: bit
        template_pin: ignore
    clk_v2t_e:
        direction: input
        datatype: bit
        template_pin: ignore
    clk_v2t_eb:
        direction: input
        datatype: bit
        template_pin: ignore
    clk_v2t_l:
        direction: input
        datatype: bit
        template_pin: ignore
    clk_v2t_lb:
        direction: input
        datatype: bit
        template_pin: ignore
    clk_v2t_gated:
        direction: input
        datatype: bit
        template_pin: ignore
    clk_v2tb_gated:
        direction: input
        datatype: bit
        template_pin: ignore
    v2t_out:
        direction: output
        datatype: real
        template_pin: out
    vcal:
        direction: input
        datatype: real
        value: 0.5

    # Use this to characterize with respect to ctl
    #ctl:
    #    direction: input
    #    datatype: binary_analog
    #    width: 31
    #    value: 0

    # <TODO: right now I pinned all 32 bits of ctl to zero instead of characterizing it. If 0 is a
    # bad default input value, you can change the bits to a different voltage.>
    ctl<0>:
        direction: input
        datatype: real
        value: 0
    ctl<1>:
        direction: input
        datatype: real
        value: 0
    ctl<2>:
        direction: input
        datatype: real
        value: 0
    ctl<3>:
        direction: input
        datatype: real
        value: 0
    ctl<4>:
        direction: input
        datatype: real
        value: 0
    ctl<5>:
        direction: input
        datatype: real
        value: 0
    ctl<6>:
        direction: input
        datatype: real
        value: 0
    ctl<7>:
        direction: input
        datatype: real
        value: 0
    ctl<8>:
        direction: input
        datatype: real
        value: 0
    ctl<9>:
        direction: input
        datatype: real
        value: 0
    ctl<10>:
        direction: input
        datatype: real
        value: 0
    ctl<11>:
        direction: input
        datatype: real
        value: 0
    ctl<12>:
        direction: input
        datatype: real
        value: 0
    ctl<13>:
        direction: input
        datatype: real
        value: 0
    ctl<14>:
        direction: input
        datatype: real
        value: 0
    ctl<15>:
        direction: input
        datatype: real
        value: 0
    ctl<16>:
        direction: input
        datatype: real
        value: 0
    ctl<17>:
        direction: input
        datatype: real
        value: 0
    ctl<18>:
        direction: input
        datatype: real
        value: 0
    ctl<19>:
        direction: input
        datatype: real
        value: 0
    ctl<20>:
        direction: input
        datatype: real
        value: 0
    ctl<21>:
        direction: input
        datatype: real
        value: 0
    ctl<22>:
        direction: input
        datatype: real
        value: 0
    ctl<23>:
        direction: input
        datatype: real
        value: 0
    ctl<24>:
        direction: input
        datatype: real
        value: 0
    ctl<25>:
        direction: input
        datatype: real
        value: 0
    ctl<26>:
        direction: input
        datatype: real
        value: 0
    ctl<27>:
        direction: input
        datatype: real
        value: 0
    ctl<28>:
        direction: input
        datatype: real
        value: 0
    ctl<29>:
        direction: input
        datatype: real
        value: 0
    ctl<30>:
        direction: input
        datatype: real
        value: 0
    ctl<31>:
        direction: input
        datatype: real
        value: 0


# <TODO: here I put the nominal behavior of the clocks. The period is set to 250ns, so
# clk_v2t goes high after 125ns and then low again at 250. >
# <TODO: if you want to characterize with respect to jitter, you can add the maximum allowed
# jitter to any clock except the main one. If you uncomment the max_jitter line in clk_v2t_l,
# it will characterize the sampler with clk_v2t_l coming between 20ns early and 20ns late.>
clks:
    unit: 1e-9
    period: 250

    clk_v2t:
        125: 1
        250: 0
    clk_v2tb:
        125: 0
        250: 1

    clk_v2t_e:
        105: 1
        230: 0
    clk_v2t_eb:
        105: 0
        230: 1

    clk_v2t_l:
        145: 1
        20:  0
        #max_jitter: 20
    clk_v2t_lb:
        145: 0
        20:  1

    clk_v2t_gated:
        125: 1
        250: 0
    clk_v2tb_gated:
        125: 0
        250: 1

# <TODO: this points to another file that has some information about the simulator. Right now it's set
# up to use spectre and you should not have to edit it. But if you need to add more command line args
# to spectre, that is the place to do it.>
test_config_file: dragonphy_test_spectre.yaml

